/******************** (C) COPYRIGHT 2012 RadioSHack ********************
 * File Name          : strip.pde
 * Author             : TRS
 * Version            : V1.0
 * Date               : 27/04/2012
 * Description        : Main program body
 ********************************************************************************
 * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
 * AS A RESULT, RS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
 * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
 * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
 * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 *******************************************************************************/
 
#include <avr/pgmspace.h>
 
// ******** DEBUG ==== should auto config to adapt different mother board *********
//#define DATA_1 (PORTF |=  0X01)    // DATA 1    // for ATMEGA
//#define DATA_0 (PORTF &=  0XFE)    // DATA 0    // for ATMEGA
//#define STRIP_PINOUT DDRF=0xFF  // for ATMEGA
#define DATA_1 (PORTC |=  0X01)    // DATA 1    // for UNO
#define DATA_0 (PORTC &=  0XFE)    // DATA 0    // for UNO
#define STRIP_PINOUT (DDRC=0xFF)    // for UNO
 
 
PROGMEM const unsigned long pattern_test_allred[10][10]={
  {0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00},
  {0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff},
  {0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff},
  {0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff},
  {0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00},
};
PROGMEM const unsigned long pattern_test_green[10][10]={
  {0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000},
};
                PROGMEM const unsigned long pattern_test_greenflash[10][10]={
 
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
                };
               
                                PROGMEM const unsigned long pattern_test_greenflash2[10][10]={
 
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xff0000,0xff0000,0xff0000,0xff0000,0xff0000},
  {0xff0000,0xff0000,0xff0000,0xff0000,0xff0000,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
 
                                };
PROGMEM const unsigned long pattern_test_green2[10][10]={
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0xff0000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
};
 
PROGMEM const unsigned long pattern_test_cray[10][10]={
0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,
0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,
0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,
0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,
0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,
0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,
0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,
0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,
0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,
0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,
};
 
 
PROGMEM const unsigned long pattern_test_blue[10][10]={
  {0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x00ff00,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x00ff00,0x00ff00,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x000000,0x000000,0x000000,0x000000},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x000000,0x00ff00,0x000000,0x000000,0x000000},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x000000,0x00ff00,0x00ff00,0x00ff00,0x000000,0x000000},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x00ff00,0x00ff00,0x00ff00},
};
 
PROGMEM const unsigned long pattern_test_what[10][10]={
0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x00ff00,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x0000ff,0x00ff00,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x00ff00,0x0000ff,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,
0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x000000,0x000000,0x000000,0x000000,
0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x000000,0x000000,0x000000,
0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x000000,0x000000,
0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x0000ff,0x00ff00,0x000000,
};
PROGMEM const unsigned long pattern_test_blue2[10][10]={
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x00ff00},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
};
 
PROGMEM const unsigned long pattern_test_red2[10][10]={
    {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x0000ff},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x000000,0x000000,0x0000ff,0x000000,0x000000},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x000000,0x0000ff,0x000000,0x000000,0x000000},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x000000,0x000000,0x000000,0x000000},
  {0x0000ff,0x0000ff,0x0000ff,0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x0000ff,0x0000ff,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x0000ff,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
};
 
PROGMEM const unsigned long pattern_test_red9[10][10]={
 
  {0x000000,0x00ff00,0x000000,0x00ff00,0x000000,0x0000ff,0x000000,0x000000,0x00ff00,0x000000},
  {0x0000ff,0x0000ff,0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x00ff00,0x00ff00,0x000000,0x0000ff,0x00ff00,0x000000},
  {0x000000,0x0000ff,0x0000ff,0x00ff00,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000},
  {0x0000ff,0x0000ff,0x000000,0x00ff00,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000,0x00ff00,0x000000},
  {0x0000ff,0x000000,0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
    {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x0000ff},
  {0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x0000ff},
  {0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x00ff00,0x0000ff,0x000000},
};
 
PROGMEM const unsigned long pattern_test_blue9[10][10]={
 
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000},
  {0x00ff00,0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000,0x00ff00,0x00ff00,0x000000,0x000000},
  {0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
    {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x00ff00},
  {0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x00ff00,0x000000},
};
 
PROGMEM const unsigned long pattern_test_flash[10][10]={
 
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00},
  {0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  };
 
 
 
PROGMEM const unsigned long pattern_test_red[10][10]={
  {0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x0000ff,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x0000ff},
};
 
 
PROGMEM const unsigned long pattern_test_white[10][10]={
  {0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00},
  {0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff},
  {0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff},
  {0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff,0x0000ff},
  {0x0000ff,0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00,0x0000ff},
  {0x00ff00,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x0000ff,0x00ff00},
};
 
PROGMEM const unsigned long pattern_test_comet1[][10]={
  {0xffffff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x444444,0xffffff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000},
  {0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x111111,0x444444,0xffffff},
};
 
PROGMEM const unsigned long pattern_test_comet2[][10]={
  {0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000,0x000000},
  {0x444444,0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000},
  {0x111111,0x444444,0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000},
  {0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000},
  {0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff},
  {0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000,0x000000},
  {0x444444,0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000},
  {0x111111,0x444444,0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000},
  {0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000},
  {0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0x111111,0x444444,0xffffff},
};
 
PROGMEM const unsigned long pattern_test_comet3[][10]={
  {0xffffff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xffffff},
  {0x444444,0xffffff,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xffffff,0x444444},
  {0x111111,0x444444,0xffffff,0x000000,0x000000,0x000000,0x000000,0xffffff,0x444444,0x111111},
  {0x000000,0x111111,0x444444,0xffffff,0x000000,0x000000,0xffffff,0x444444,0x111111,0x000000},
  {0x000000,0x000000,0x111111,0x444444,0xffffff,0xffffff,0x444444,0x111111,0x000000,0x000000},
  {0x000000,0x000000,0x111111,0x444444,0xffffff,0xffffff,0x444444,0x111111,0x000000,0x000000},
  {0x000000,0x000000,0x000000,0xffffff,0x444444,0x444444,0xffffff,0x000000,0x000000,0x000000},
  {0x000000,0x000000,0xffffff,0x444444,0x111111,0x111111,0x444444,0xffffff,0x000000,0x000000},
  {0x000000,0xffffff,0x444444,0x111111,0x000000,0x000000,0x111111,0x444444,0xffffff,0x000000},
  {0xffffff,0x444444,0x111111,0x000000,0x000000,0x000000,0x000000,0x111111,0x444444,0xffffff},
};
 
PROGMEM const unsigned long pattern_test_rainbow[10][10]={
  {0xff0000,0xff7f00,0xffff00,0x00ff00,0x0000ff,0x6f00ff,0x8f00ff,0x000000,0x000000,0x000000},
  {0x000000,0xff0000,0xff7f00,0xffff00,0x00ff00,0x0000ff,0x6f00ff,0x8f00ff,0x000000,0x000000},
  {0x000000,0x000000,0xff0000,0xff7f00,0xffff00,0x00ff00,0x0000ff,0x6f00ff,0x8f00ff,0x000000},
  {0x000000,0x000000,0x000000,0xff0000,0xff7f00,0xffff00,0x00ff00,0x0000ff,0x6f00ff,0x8f00ff},
  {0x8f00ff,0x000000,0x000000,0x000000,0xff0000,0xff7f00,0xffff00,0x00ff00,0x0000ff,0x6f00ff},
  {0x6f00ff,0x8f00ff,0x000000,0x000000,0x000000,0xff0000,0xff7f00,0xffff00,0x00ff00,0x0000ff},
  {0x0000ff,0x6f00ff,0x8f00ff,0x000000,0x000000,0x000000,0xff0000,0xff7f00,0xffff00,0x00ff00},
  {0x00ff00,0x0000ff,0x6f00ff,0x8f00ff,0x000000,0x000000,0x000000,0xff0000,0xff7f00,0xffff00},
  {0xffff00,0x00ff00,0x0000ff,0x6f00ff,0x8f00ff,0x000000,0x000000,0x000000,0xff0000,0xff7f00},
  {0xff7f00,0xffff00,0x00ff00,0x0000ff,0x6f00ff,0x8f00ff,0x000000,0x000000,0x000000,0xff0000},
};
PROGMEM const unsigned long pattern_test_allwhite[10][10]={
 
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
  {0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff},
};
 
 
 
// ***********************************************************************************************************
// *
// *                            Power Up Init.
// *
// *
// ***********************************************************************************************************
void setup() {                
 
  STRIP_PINOUT;        // set output pin - DEBUG: should auto detect which mother board for use
 
  reset_strip();
  //noInterrupts();
 
}
 
 
 
// ***********************************************************************************************************
// *
// *                            Main Loop
// *
// *
// ***********************************************************************************************************
void loop()
{
 
    send_1M_pattern(pattern_test_allwhite, 10, 116);
        send_1M_pattern(pattern_test_green, 10, 116);
            send_1M_pattern(pattern_test_comet2, 10, 116);
            send_1M_pattern(pattern_test_greenflash, 10, 116);
            send_1M_pattern(pattern_test_greenflash2, 10, 116);
 
    send_1M_pattern(pattern_test_rainbow, 10, 116);
 
 
 
 
 
 
  while (1)
  {
    send_1M_pattern(pattern_test_flash, 10, 96);
 
    send_1M_pattern(pattern_test_flash, 10, 86);
        send_1M_pattern(pattern_test_flash, 10, 76);
    send_1M_pattern(pattern_test_flash, 10, 106);
  send_1M_pattern(pattern_test_what, 10, 60);
    send_1M_pattern(pattern_test_allred, 10, 30);
        send_1M_pattern(pattern_test_blue9, 10, 30);
                send_1M_pattern(pattern_test_what, 10, 10);
            send_1M_pattern(pattern_test_red9, 10, 20);
      send_1M_pattern(pattern_test_red2, 10, 34);
        send_1M_pattern(pattern_test_what, 10, 40);
    send_1M_pattern(pattern_test_allred, 10, 22);
      send_1M_pattern(pattern_test_red9, 10, 23);
    send_1M_pattern(pattern_test_red9, 10, 1);
        send_1M_pattern(pattern_test_blue9, 10, 1);
      send_1M_pattern(pattern_test_red9, 10, 21);
            send_1M_pattern(pattern_test_red9, 10, 51);
    send_1M_pattern(pattern_test_red9, 10, 1);
        send_1M_pattern(pattern_test_blue9, 10, 1);
      send_1M_pattern(pattern_test_red9, 10, 21);
            send_1M_pattern(pattern_test_red9, 10, 23);
    send_1M_pattern(pattern_test_red9, 10, 1);
        send_1M_pattern(pattern_test_blue9, 10, 1);
      send_1M_pattern(pattern_test_red9, 10, 21);
            send_1M_pattern(pattern_test_red9, 10, 51);
    send_1M_pattern(pattern_test_red9, 10, 1);
        send_1M_pattern(pattern_test_blue9, 10, 1);
      send_1M_pattern(pattern_test_red9, 10, 21);
 
        send_1M_pattern(pattern_test_allred, 10, 12);
            send_1M_pattern(pattern_test_allred, 10, 52);
      send_1M_pattern(pattern_test_cray, 10, 20);
 
  send_1M_pattern(pattern_test_blue, 10, 11);
  send_1M_pattern(pattern_test_red, 10, 11);
      send_1M_pattern(pattern_test_allred, 10, 10);
   send_1M_pattern(pattern_test_blue2, 10, 11);
  send_1M_pattern(pattern_test_red2, 10, 11);
      send_1M_pattern(pattern_test_allred, 10, 10);
        send_1M_pattern(pattern_test_red2, 10, 20);
  send_1M_pattern(pattern_test_cray, 10, 20);
 
  send_1M_pattern(pattern_test_blue2, 10, 20);
        send_1M_pattern(pattern_test_red, 10, 20);
 
   
    send_1M_pattern(pattern_test_flash, 10, 26);
        send_1M_pattern(pattern_test_white, 10, 6);
            send_1M_pattern(pattern_test_white, 10, 26);
        send_1M_pattern(pattern_test_white, 10, 6);
            send_1M_pattern(pattern_test_white, 10, 26);
        send_1M_pattern(pattern_test_white, 10, 6);
            send_1M_pattern(pattern_test_white, 10, 26);
        send_1M_pattern(pattern_test_white, 10, 6);
            send_1M_pattern(pattern_test_white, 10, 26);
        send_1M_pattern(pattern_test_white, 10, 6);
            send_1M_pattern(pattern_test_red, 10, 26);
    send_1M_pattern(pattern_test_blue, 10, 26);
                send_1M_pattern(pattern_test_red2, 10, 26);
 
 
 
  }
 
 
  /*
        frame++;
        if(frame<=10) LEDSTRIP_PATTERN_0();
        if(10<frame<=20) LEDSTRIP_PATTERN_0();
        if(20<frame<=30) LEDSTRIP_PATTERN_0();
        if(frame>30) frame=1;
   */
  //delay(1);
}
 
 
/*******************************************************************************
 * Function Name  : send_1M_pattern
 * Description    : Transmit pattern to whole 1 meter strip
 *                  
 * Input          : pointer to ROM pattern; pattern length; frame rate
 *                  
 * Output         : None
 * Return         : None
 *******************************************************************************/
void send_1M_pattern(const unsigned long data[][10], int pattern_no, int frame_rate)
{
  int i=0;
  int j=0;
  uint32_t temp_data;
 
  for (i=0;i<pattern_no;i++)
  {
    noInterrupts();
    for (j=0;j<10;j++)
    {
      temp_data=pgm_read_dword_near(&data[i][j]);
      send_strip(temp_data);
    }
    interrupts();
 
    delay(frame_rate);
 
  }
 
 
 
 
}
 
 
/*******************************************************************************
 * Function Name  : send_strip
 * Description    : Transmit 24 pulse to LED strip
 *                  
 * Input          : 24-bit data for the strip
 *                  
 * Output         : None
 * Return         : None
 *******************************************************************************/
void send_strip(uint32_t data)
{
  int i;
  unsigned long j=0x800000;
 
 
  for (i=0;i<24;i++)
  {
    if (data & j)
    {
      DATA_1;
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");    
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      DATA_0;
    }
    else
    {
      DATA_1;
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");
      __asm__("nop\n\t");    
      DATA_0;
    }
 
    j>>=1;
  }
 
 
 
}
 
/*******************************************************************************
 * Function Name  : reset_strip
 * Description    : Send reset pulse to reset all color of the strip
 *                  
 * Input          : None
 *                  
 * Output         : None
 * Return         : None
 *******************************************************************************/
void    reset_strip()
{
  DATA_0;
  delayMicroseconds(20);
}
